import{RELAYER_DEFAULT_PROTOCOL as pe,RELAYER_EVENTS as L,EXPIRER_EVENTS as he,Store as K,Core as de}from"@walletconnect/core";import{pino as ge,getDefaultLoggerOptions as me,generateChildLogger as ue,getLoggerContext as we}from"@walletconnect/logger";import{IEngine as ye,ISignClient as Se}from"@walletconnect/types";import{TYPE_1 as Ie,createDelayedPromise as T,engineEvent as p,getInternalError as c,calcExpiry as _,isValidObject as k,getRequiredNamespacesFromNamespaces as Ee,getSdkError as R,handleDeeplinkRedirect as _e,isSessionCompatible as Re,isBrowser as Ne,hashMessage as z,isExpired as P,isValidParams as S,isUndefined as x,isValidRelays as fe,isValidRequiredNamespaces as ve,isValidNamespaces as Y,isConformingNamespaces as B,isValidString as D,isValidErrorReason as Pe,isValidRelay as qe,isValidController as Oe,isValidNamespacesChainId as W,isValidRequest as Ve,isValidNamespacesRequest as Te,isValidRequestExpiry as xe,isValidResponse as De,isValidEvent as Ce,isValidNamespacesEvent as Ae,parseExpirerTarget as Le,isValidId as be,getAppMetadata as Ge}from"@walletconnect/utils";import $e,{EventEmitter as Me}from"events";import{THIRTY_DAYS as Ue,SEVEN_DAYS as Q,FIVE_MINUTES as u,ONE_DAY as q,THIRTY_SECONDS as Z}from"@walletconnect/time";import{isJsonRpcResult as N,isJsonRpcError as f,getBigIntRpcId as Ke,formatJsonRpcRequest as ke,formatJsonRpcResult as ze,formatJsonRpcError as Ye,isJsonRpcRequest as je,isJsonRpcResponse as Je}from"@walletconnect/jsonrpc-utils";const j="wc",J=2,X="client",b=`${j}@${J}:${X}:`,G={name:X,logger:"error",controller:!1,relayUrl:"wss://relay.walletconnect.com"},Xe={session_proposal:"session_proposal",session_update:"session_update",session_extend:"session_extend",session_ping:"session_ping",session_delete:"session_delete",session_expire:"session_expire",session_request:"session_request",session_request_sent:"session_request_sent",session_event:"session_event",proposal_expire:"proposal_expire"},He={database:":memory:"},ee="WALLETCONNECT_DEEPLINK_CHOICE",Fe={created:"history_created",updated:"history_updated",deleted:"history_deleted",sync:"history_sync"},Be="history",We="0.3",se="proposal",Qe=Ue,te="Proposal expired",ie="session",C=Q,ne="engine",O={wc_sessionPropose:{req:{ttl:u,prompt:!0,tag:1100},res:{ttl:u,prompt:!1,tag:1101}},wc_sessionSettle:{req:{ttl:u,prompt:!1,tag:1102},res:{ttl:u,prompt:!1,tag:1103}},wc_sessionUpdate:{req:{ttl:q,prompt:!1,tag:1104},res:{ttl:q,prompt:!1,tag:1105}},wc_sessionExtend:{req:{ttl:q,prompt:!1,tag:1106},res:{ttl:q,prompt:!1,tag:1107}},wc_sessionRequest:{req:{ttl:u,prompt:!0,tag:1108},res:{ttl:u,prompt:!1,tag:1109}},wc_sessionEvent:{req:{ttl:u,prompt:!0,tag:1110},res:{ttl:u,prompt:!1,tag:1111}},wc_sessionDelete:{req:{ttl:q,prompt:!1,tag:1112},res:{ttl:q,prompt:!1,tag:1113}},wc_sessionPing:{req:{ttl:Z,prompt:!1,tag:1114},res:{ttl:Z,prompt:!1,tag:1115}}},$={min:u,max:Q},re="request",oe=["wc_sessionPropose","wc_sessionRequest","wc_authRequest"];var Ze=Object.defineProperty,es=Object.defineProperties,ss=Object.getOwnPropertyDescriptors,ae=Object.getOwnPropertySymbols,ts=Object.prototype.hasOwnProperty,is=Object.prototype.propertyIsEnumerable,ce=(d,n,e)=>n in d?Ze(d,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[n]=e,w=(d,n)=>{for(var e in n||(n={}))ts.call(n,e)&&ce(d,e,n[e]);if(ae)for(var e of ae(n))is.call(n,e)&&ce(d,e,n[e]);return d},H=(d,n)=>es(d,ss(n));class ns extends ye{constructor(n){super(n),this.name=ne,this.events=new $e,this.initialized=!1,this.ignoredPayloadTypes=[Ie],this.init=async()=>{this.initialized||(await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.client.core.pairing.register({methods:Object.keys(O)}),this.initialized=!0)},this.connect=async e=>{this.isInitialized();const s=H(w({},e),{requiredNamespaces:e